apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: odoo-cnet5
    tier: frontend
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-odoo-cnet5
  name: odoo-cnet5
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-odoo-cnet5
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-odoo-cnet5
    spec:
      initContainers:
      - command:
        - sh
        - -c
        - until pg_isready -h db-cnet5 -p 5432; do echo waiting for database; sleep
          2; done;
        image: postgres:9.6.5
        imagePullPolicy: IfNotPresent
        name: check-db-ready
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      # affinity:
      #   nodeAffinity:
      #     requiredDuringSchedulingIgnoredDuringExecution:
      #       nodeSelectorTerms:
      #       - matchExpressions:
      #         - key: stack
      #           operator: In
      #           values:
      #           - odoo
      containers:
      - env:
        - name: HOST
          value: db-cnet5
        - name: PASSWORD
          value: odoo
        - name: USER
          value: odoo
        image: odoo:18
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /web/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 600
          periodSeconds: 300
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 8069
          name: http
          protocol: TCP
        startupProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              path: /web/health
              port: http
              scheme: HTTP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /web/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: odoo-cnet5
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
            allowPrivilegeEscalation: false
            capabilities: {}
            privileged: false
            readOnlyRootFilesystem: false
            runAsNonRoot: false
            runAsUser: 0
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        ports:
            - containerPort: 8069
              name: http
              protocol: TCP
        volumeMounts:
        # Edit the volume to match the existing mountPaths in the cluster
        - mountPath: /var/lib/odoo
          name: vol-wjslm
          subPath: odoo
        - mountPath: /mnt/extra-addons
          name: vol-wjslm
          subPath: odoo/addons
        - mountPath: /etc/odoo
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      # Edit the volume to match the existing pv in the cluster
      - hostPath:
          path: /mnt/cnet5/odoo
          type: DirectoryOrCreate
        name: vol-wjslm
      - configMap:
          defaultMode: 509
          name: odoo.conf
          optional: true
        name: config

