apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: odoo-cbmpei
    tier: frontend
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-odoo-cbmpei
  name: odoo-cbmpei
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-odoo-cbmpei
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-odoo-cbmpei
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:9.6.5
        command: ['sh', '-c', 
          'until pg_isready -h db-cbmpei -p 5432; 
          do echo waiting for database; sleep 2; done;']
      - name: db-install
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: PGPASSWORD
          value: odoo
        - name: POSTGRES_USER
          value: odoo
        image: postgres:9.6.5
        command: ['sh', '-c', 
          #'until createdb cbmpei -h db-cbmpei -U odoo -p 5432; 
          #do echo waiting for database installation; sleep 60; done;'
          'if psql -h db-cbmpei -U odoo -p 5432 -lqt | cut -d \| -f 1 | grep -qw "cbmpei"; then
    echo "The database cbmpei exists."
else
    until createdb -h db-cbmpei -U odoo -p 5432 cbmpei; 
fi
'
          ]
      - name: db-restore
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: PGPASSWORD
          value: odoo
        - name: POSTGRES_USER
          value: odoo
        image: postgres:9.6.5
        command: ['sh', '-c', 
          #'until createdb cbmpei -h db-cbmpei -U odoo -p 5432; 
          #do echo waiting for database installation; sleep 60; done;'
          '#!/bin/bash
          
           FTP_HOST="ss.vps50988.mylogin.co"
           FTP_USER="odoo_ss.vps50988.mylogin.co"
           FTP_PASSWORD="i24125114A"
           FTP_REMOTE_FILE="odoo_2023-12-29_19-32-40.dump"
           LOCAL_HOST="db-cbmpei"
           LOCAL_USER="odoo"
           LOCAL_DATABASE="cbmpei"
           LOCAL_DUMP_FILE="odoo.dump"

           echo "Downloading database dump from FTP..."
           wget -O "$LOCAL_DUMP_FILE" "ftp://$FTP_USER:$FTP_PASSWORD@$FTP_HOST/$FTP_REMOTE_FILE"

           if [ -e "$LOCAL_DUMP_FILE" ]; then
           echo "Restoring database dump locally..."
           createdb -h "$LOCAL_HOST" -U "$LOCAL_USER" -e "$LOCAL_DATABASE"
           PGPASSWORD="odoo" psql -h "$LOCAL_HOST" -U "$LOCAL_USER" -d "$LOCAL_DATABASE" -f "$LOCAL_DUMP_FILE"
           echo "Database restored successfully."
           rm "$LOCAL_DUMP_FILE"
           
           else
               echo "Error: Failed to download the database dump from FTP."
           fi
           '
          ]
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: stack
                operator: In
                values:
                - odoo
      containers:
      - env:
        - name: HOST
          value: db-cbmpei
        - name: PASSWORD
          value: odoo
        - name: USER
          value: odoo
        image: odoo:17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /web/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 600
          periodSeconds: 300
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 8069
          name: http
          protocol: TCP
        startupProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              path: /web/health
              port: http
              scheme: HTTP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /web/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: odoo-cbmpei
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        ports:
            - containerPort: 8069
              name: http
              protocol: TCP
        volumeMounts:
        # Edit the volume to match the existing mountPaths in the cluster
        - mountPath: /var/lib/odoo
          name: vol-7xe3r
          subPath: odoo
        - mountPath: /mnt/extra-addons
          name: vol-7xe3r
          subPath: odoo/addons
        - mountPath: /etc/odoo
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 509
          name: odoo.conf
          optional: true
        name: config
      # Edit the volume to match the existing pv in the cluster
      - name: vol-7xe3r
        persistentVolumeClaim:
          claimName: odoo-cbmpei

