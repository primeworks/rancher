apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: odoo-abopeng
    tier: frontend
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-odoo-abopeng
  name: odoo-abopeng
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-odoo-abopeng
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-odoo-abopeng
    spec:
      initContainers:
      - name: check-db-ready
        image: postgres:9.6.5
        command:
        - sh
        - -c
        - until pg_isready -h db-abopeng -p 5432; do echo waiting for database; sleep
          2; done;
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: stack
                operator: In
                values:
                - odoo
      containers:
      - env:
        - name: HOST
          value: db-abopeng
        - name: PASSWORD
          value: odoo
        - name: USER
          value: odoo
        image: odoo:15
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8069
          name: http
          protocol: TCP
        name: odoo-abopeng
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        ports:
            - containerPort: 8069
              name: http
              protocol: TCP
        volumeMounts:
        # Edit the volume to match the existing mountPaths in the cluster
        - mountPath: /var/lib/odoo
          name: vol-7xe3r
          subPath: odoo
        - mountPath: /mnt/extra-addons
          name: vol-7xe3r
          subPath: odoo/addons
        - mountPath: /etc/odoo
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      tolerations:
      - effect: NoSchedule
        key: stack
        operator: Equal
        value: odoo
      volumes:
      - configMap:
          defaultMode: 509
          name: odoo.conf
          optional: true
        name: config
      # Edit the volume to match the existing pv in the cluster
      - name: vol-7xe3r
        persistentVolumeClaim:
          claimName: odoo-abopeng

