clusterManager:
  additionalLabels: {}
  affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - db
  appRepo: {}
  defaults: {}
  defaultsUrl: ''
  defaultsUrlApps: ''
  enabled: true
  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  extraEnv: []
  licenseUrl: ''
  livenessInitialDelaySeconds: 300
  name: cm
  namespaceOverride: ''
  readinessInitialDelaySeconds: 10
  resources: {}
  serviceAccount: ''
  smartstore: {}
  tolerations: []
  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  volumes: []
existingClusterManager: {}
existingLicenseManager: {}
existingMonitoringConsole: {}
image:
  imagePullPolicy: ''
  imagePullSecrets: []
  repository: ''
indexerCluster:
  additionalLabels: {}
  affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - db
  defaults: {}
  defaultsUrl: ''
  enabled: true
  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  extraEnv: []
  licenseUrl: ''
  livenessInitialDelaySeconds: 300
  name: idxc
  namespaceOverride: ''
  readinessInitialDelaySeconds: 10
  replicaCount: 1
  resources: {}
  serviceAccount: ''
  tolerations: []
  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  volumes: []
licenseManager:
  additionalLabels: {}
  affinity: {}
  appRepo: {}
  defaults: {}
  defaultsUrl: ''
  defaultsUrlApps: ''
  enabled: false
  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  extraEnv: []
  licenseUrl: ''
  livenessInitialDelaySeconds: 300
  name: lm
  namespaceOverride: ''
  readinessInitialDelaySeconds: 10
  resources: {}
  serviceAccount: ''
  tolerations: []
  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  volumes: []
monitoringConsole:
  additionalLabels: {}
  affinity: {}
  appRepo: {}
  defaults: {}
  defaultsUrl: ''
  defaultsUrlApps: ''
  enabled: false
  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  extraEnv: []
  licenseUrl: ''
  livenessInitialDelaySeconds: 300
  name: mc
  namespaceOverride: ''
  readinessInitialDelaySeconds: 10
  resources: {}
  serviceAccount: ''
  tolerations: []
  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  volumes: []
searchHeadCluster:
  additionalLabels: {}
  affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - db
  appRepo: {}
  defaults: {}
  defaultsUrl: ''
  defaultsUrlApps: ''
  enabled: true
  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  extraEnv: []
  licenseUrl: ''
  livenessInitialDelaySeconds: 300
  name: shc
  namespaceOverride: ''
  readinessInitialDelaySeconds: 10
  replicaCount: 1
  resources: {}
  serviceAccount: ''
  tolerations: []
  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  volumes: []
splunk-operator:
  enabled: true
standalone:
  additionalLabels: {}
  affinity: 
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - files
  appRepo: {}
  defaults: {}
  defaultsUrl: ''
  defaultsUrlApps: ''
  enabled: false
  etcVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 10Gi
  extraEnv: []
  licenseUrl: ''
  livenessInitialDelaySeconds: 300
  name: stdln
  namespaceOverride: ''
  readinessInitialDelaySeconds: 10
  replicaCount: 1
  resources: {}
  serviceAccount: ''
  smartstore: {}
  tolerations: []
  varVolumeStorageConfig:
    ephemeralStorage: false
    storageCapacity: 100Gi
  volumes: []
sva:
  c3:
    enabled: false
    indexerClusters: []
    searchHeadClusters: []
  m4:
    clusterManager: {}
    enabled: false
    indexerClusters: []
    searchHeadClusters: []
  s1:
    enabled: true
    standalones: 1
