apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: odoo-basic
    tier: frontend
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-default-odoo-basic
  name: odoo-basic
spec:
  progressDeadlineSeconds: 600
  replicas: 2
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-default-odoo-basic
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        field.cattle.io/ports: '[[]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-default-odoo-basic
    spec:
      initContainers:
      - command:
        - sh
        - -c
        - until pg_isready -h db-basic -p 5432; do echo waiting for databasic; sleep
          2; done;
        image: postgres:9.6.5
        imagePullPolicy: IfNotPresent
        name: check-db-ready
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
      # - command:
      #   - sh
      #   - -c
      #   - 'if psql -h db-basic -U odoo -p 5432 -lqt | cut -d \| -f 1 | grep -qw "basic";
      #     then echo "The databasic basic exists." else until createdb -h db-basic
      #     -U odoo -p 5432 basic; fi '
      #   env:
      #   - name: POSTGRES_DB
      #     value: postgres
      #   - name: PGPASSWORD
      #     value: odoo
      #   - name: POSTGRES_USER
      #     value: odoo
      #   image: postgres:9.6.5
      #   imagePullPolicy: IfNotPresent
      #   name: db-install
      #   resources: {}
      #   terminationMessagePath: /dev/termination-log
      #   terminationMessagePolicy: File
      # - command:
      #   - sh
      #   - -c
      #   - |
      #     FTP_HOST="ss.vps50988.mylogin.co"
      #     FTP_USER="odoo_ss.vps50988.mylogin.co"
      #     FTP_PASSWORD="i24125114A"
      #     FTP_REMOTE_FILE="dump.sql"
      #     FTP_REMOTE_FILESTORE="odoo17-basic.zip"
      #     LOCAL_HOST="db-basic"
      #     LOCAL_USER="odoo"
      #     LOCAL_DATAbasic="basic"
      #     LOCAL_DUMP_FILE="odoo17-basic.zip"

      #     echo "Entering odoo directory...."
      #     cd /mnt/
      #     echo "Creating filestore directory..."
      #     mkdir filestore
      #     mkdir addons
      #     echo "Creating $LOCAL_DATAbasic directory..."
      #     mkdir filestore/$LOCAL_DATAbasic
      #     echo "Downloading filestore files..."
      #     cd addons/
      #     wget -P ./ "ftp://$FTP_USER:$FTP_PASSWORD@$FTP_HOST/$FTP_REMOTE_FILESTORE"
      #     echo "Extracting archive..."
      #     unzip $LOCAL_DUMP_FILE
      #     echo "Move files from directory"
      #     mv filestore/* /mnt/filestore/$LOCAL_DATAbasic
      #     mv dump.sql /mnt/
      #     echo "List items in odoo directory..."
      #     ls /mnt/
      #     echo "List contents in filestore directory..."
      #     ls /mnt/filestore/$LOCAL_DATAbasic/

      #     echo "Setting directory permissions..."
      #     chmod -Rv 777 /mnt/filestore
      #     echo "Permissions set..."
            
      #   #  fi
      #   image: busybox
      #   imagePullPolicy: IfNotPresent
      #   name: filestore-restored
      #   volumeMounts:
      #   # Edit the volume to match the existing mountPaths in the cluster
      #   - mountPath: /mnt
      #     name: vol-7xe3r
      #     subPath: odoo
      #   resources: {}
      #   terminationMessagePath: /dev/termination-log
      #   terminationMessagePolicy: File
      # - command:
      #   - sh
      #   - -c
      #   - |
      #     LOCAL_HOST="db-basic"
      #     LOCAL_USER="odoo"
      #     LOCAL_DATAbasic="basic"
      #     LOCAL_DUMP_FILE="odoo-basic.dump"

      #     if ! PGPASSWORD="odoo" psql -h db-basic -U odoo -d basic -c "SELECT 1 FROM information_schema.tables WHERE table_name = 'res_users'" | grep -q 1; then
      #       echo "The res_users table doesn't exist in the basic databasic. Proceeding with databasic restore..."

      #       echo "Entering odoo directory..."
      #       cd /var/lib/odoo/addons/
      #       echo "List contents of odoo directory..."
      #       ls /var/lib/odoo/addons/

      #       echo "Restoring databasic dump locally..."
      #       if PGPASSWORD="odoo" createdb -h "$LOCAL_HOST" -U "$LOCAL_USER" -e "$LOCAL_DATAbasic"; then
      #         echo "The databasic $LOCAL_DATAbasic created..."
      #       else echo "The databasic $LOCAL_DATAbasic already exists..."
      #       fi
      #       if PGPASSWORD="odoo" pg_restore -h "$LOCAL_HOST" -U "$LOCAL_USER" -d "$LOCAL_DATAbasic" -v "$LOCAL_DUMP_FILE"; then
                 
      #            echo "Databasic restored successfully."
      #            rm "$LOCAL_DUMP_FILE"
      #         else  echo "Databasic failed to be restored."
      #               rm "$LOCAL_DUMP_FILE"
      #         fi
      #     else
      #       echo "The res_users table already exists in the basic databasic. Skipping databasic restore."
      #     fi
      #   image: odoo:17
      #   imagePullPolicy: IfNotPresent
      #   name: db-restored
      #   volumeMounts:
      #   # Edit the volume to match the existing mountPaths in the cluster
      #   - mountPath: /var/lib/odoo
      #     name: vol-7xe3r
      #     subPath: odoo
      #   resources: {}
      #   terminationMessagePath: /dev/termination-log
      #   terminationMessagePolicy: File
      
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: stack
                operator: In
                values:
                - db
      containers:
      - env:
        - name: HOST
          value: db-basic
        - name: PASSWORD
          value: odoo
        - name: USER
          value: odoo
        image: odoo:17
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 6
          httpGet:
            path: /web/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 600
          periodSeconds: 600
          successThreshold: 1
          timeoutSeconds: 5
        ports:
        - containerPort: 8069
          name: http
          protocol: TCP
        startupProbe:
            failureThreshold: 3
            successThreshold: 1
            initialDelaySeconds: 0
            timeoutSeconds: 1
            periodSeconds: 10
            httpGet:
              path: /web/health
              port: http
              scheme: HTTP
        readinessProbe:
          failureThreshold: 6
          httpGet:
            path: /web/health
            port: http
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 300
          successThreshold: 1
          timeoutSeconds: 5
        name: odoo-basic
        resources:
          requests:
            cpu: 100m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        ports:
            - containerPort: 8069
              name: http
              protocol: TCP
        volumeMounts:
        # Edit the volume to match the existing mountPaths in the cluster
        - mountPath: /var/lib/odoo
          name: vol-7xe3r
          subPath: odoo
        - mountPath: /mnt/extra-addons
          name: vol-7xe3r
          subPath: odoo/addons
        - mountPath: /etc/odoo
          name: config
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 509
          name: odoo-basic.conf
          optional: true
        name: config
      # Edit the volume to match the existing pv in the cluster
      - name: vol-7xe3r
        persistentVolumeClaim:
          claimName: odoo-basic

