apiVersion: apps/v1
kind: StatefulSet
metadata:
  labels:
    app: db-agg
    app.kubernetes.io/managed-by: Helm
    cattle.io/creator: norman
    objectset.rio.cattle.io/hash: dbb408b909497414f93be5e7a78a2f285d27b7e1
    workload.user.cattle.io/workloadselector: statefulSet-default-db-agg
  name: db-agg
spec:
  podManagementPolicy: OrderedReady
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: statefulSet-default-db-agg
  serviceName: db-agg
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2022-09-04T02:49:36Z"
        field.cattle.io/ports: '[[]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: statefulSet-default-db-agg
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: app
                operator: In
                values:
                - db
      
      containers:
      - args:
        - -c
        - max_connections=1200
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_PASSWORD
          value: odoo
        - name: POSTGRES_USER
          value: odoo
        image: postgres:12
        imagePullPolicy: IfNotPresent
        name: db-agg
        resources:
          limits:
            cpu: "1"
            memory: 6000Mi
          requests:
            cpu: 500m
            memory: 512Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
          runAsUser: 1000
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        # Edit the volume to match the existing volumeMounts in the cluster
        - mountPath: /var/lib/postgresql/data
          name: vol-ytjxx
          subPath: database
      initContainers:
      - name: busybox
        image: busybox
        command: ["/bin/chown","-R","1000:1000", "/home/agg/work"]
        securityContext:
          runAsUser: 0
          privileged: true
        volumeMounts:
        - name: vol-ytjxx
          mountPath: /home/agg/work
      volumes:
      - name: vol-ytjxx
        persistentVolumeClaim:
          claimName: agg-odoo
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - emptyDir:
          medium: Memory
        name: dshm
      # Edit the volume to match the existing pv in the cluster
      - name: vol-ytjxx
        persistentVolumeClaim:
          claimName: agg-odoo
  updateStrategy:
    type: RollingUpdate
status:
  availableReplicas: 1
  replicas: 1
