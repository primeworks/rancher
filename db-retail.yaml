apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: retail-odoo
  labels:
    app: retail-odoo
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---

apiVersion: apps/v1
kind: StatefulSet
metadata:
  annotations:
    field.cattle.io/creatorId: user-t5wpm
    meta.helm.sh/release-name: silicon
    meta.helm.sh/release-namespace: default
    objectset.rio.cattle.io/id: default-silicon
  creationTimestamp: "2022-08-27T23:22:43Z"
  generation: 3
  labels:
    app: retail-odoo
    app.kubernetes.io/managed-by: Helm
    cattle.io/creator: norman
    objectset.rio.cattle.io/hash: dbb408b909497414f93be5e7a78a2f285d27b7e1
    workload.user.cattle.io/workloadselector: statefulSet-default-db
  managedFields:
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:collisionCount: {}
    manager: kube-controller-manager
    operation: Update
    time: "2021-11-09T18:48:54Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:metadata:
        f:annotations:
          .: {}
          f:field.cattle.io/creatorId: {}
          f:meta.helm.sh/release-name: {}
          f:meta.helm.sh/release-namespace: {}
          f:objectset.rio.cattle.io/id: {}
        f:labels:
          .: {}
          f:app.kubernetes.io/managed-by: {}
          f:cattle.io/creator: {}
          f:objectset.rio.cattle.io/hash: {}
          f:workload.user.cattle.io/workloadselector: {}
      f:spec:
        f:podManagementPolicy: {}
        f:revisionHistoryLimit: {}
        f:selector: {}
        f:serviceName: {}
        f:template:
          f:metadata:
            f:annotations:
              .: {}
              f:field.cattle.io/ports: {}
            f:labels:
              .: {}
              f:workload.user.cattle.io/workloadselector: {}
          f:spec:
            f:affinity: {}
            f:containers:
              k:{"name":"db-retail"}:
                .: {}
                f:env:
                  .: {}
                  k:{"name":"POSTGRES_DB"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"POSTGRES_PASSWORD"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                  k:{"name":"POSTGRES_USER"}:
                    .: {}
                    f:name: {}
                    f:value: {}
                f:image: {}
                f:imagePullPolicy: {}
                f:name: {}
                f:resources: {}
                f:securityContext:
                  .: {}
                  f:allowPrivilegeEscalation: {}
                  f:capabilities: {}
                  f:privileged: {}
                  f:readOnlyRootFilesystem: {}
                  f:runAsNonRoot: {}
                f:stdin: {}
                f:terminationMessagePath: {}
                f:terminationMessagePolicy: {}
                f:tty: {}
                f:volumeMounts:
                  .: {}
                  k:{"mountPath":"/var/lib/postgresql/data"}:
                    .: {}
                    f:mountPath: {}
                    f:name: {}
            f:dnsPolicy: {}
            f:restartPolicy: {}
            f:schedulerName: {}
            f:securityContext: {}
            f:terminationGracePeriodSeconds: {}
            f:volumes:
              .: {}
              k:{"name":"vol1"}:
                .: {}
                f:hostPath:
                  .: {}
                  f:path: {}
                  f:type: {}
                f:name: {}
        f:updateStrategy:
          f:type: {}
    manager: fleetagent
    operation: Update
    time: "2022-08-27T23:22:43Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:replicas: {}
    manager: agent
    operation: Update
    time: "2022-09-01T12:23:34Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:status:
        f:currentRevision: {}
        f:observedGeneration: {}
        f:replicas: {}
        f:updateRevision: {}
    manager: kube-controller-manager
    operation: Update
    subresource: status
    time: "2022-09-04T02:49:37Z"
  - apiVersion: apps/v1
    fieldsType: FieldsV1
    fieldsV1:
      f:spec:
        f:template:
          f:metadata:
            f:annotations:
              f:cattle.io/timestamp: {}
          f:spec:
            f:containers:
              k:{"name":"db-retail"}:
                f:args: {}
    manager: rancher
    operation: Update
    time: "2022-09-04T02:49:37Z"
  name: db-retail
  namespace: default
spec:
  podManagementPolicy: OrderedReady
  replicas: 0
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: statefulSet-default-db
  serviceName: db
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2022-09-04T02:49:36Z"
        field.cattle.io/ports: '[[]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: statefulSet-default-db
    spec:
      affinity: {}
      containers:
      - args:
        - -c
        - max_connections=1200
        env:
        - name: POSTGRES_DB
          value: postgres
        - name: POSTGRES_PASSWORD
          value: odoo
        - name: POSTGRES_USER
          value: odoo
        image: postgres:12
        imagePullPolicy: Always
        name: db-retail
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /var/lib/postgresql/data
          name: vol1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: /mnt/data/database
          type: DirectoryOrCreate
        name: vol1
  updateStrategy:
    type: RollingUpdate
status:
  availableReplicas: 0
  collisionCount: 0
  currentRevision: db-retail-dc7fc6786
  observedGeneration: 3
  replicas: 0
  updateRevision: db-retail-dc7fc6786
